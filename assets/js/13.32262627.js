(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{379:function(t,s,a){"use strict";a.r(s);var e=a(45),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"proxy-相关参数介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxy-相关参数介绍"}},[t._v("#")]),t._v(" Proxy 相关参数介绍")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MaxIdleConns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("512")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代理一些配置默认即可")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MaxIdleConnsPerHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MaxConnsPerHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("IdleConnTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2m0s\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TLSHandshakeTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1m0s\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ExpectContinueTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1s\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxcontentlength")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20971520")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 处理响应数据最大值默认 20M，超过这个值，插件中需要读取 body 的操作会被取消")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ProxyServerAddr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置代理，设置后通过代理进行网页请求")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ProxyCheckURL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//myip.ipip.net/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问此地址检查代理设置是否正确")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("PluginDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" plugins\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Site")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("127.0.0.1:8083")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求头的 host 类似于 nginx server_name 如果不匹配 访问不了")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0.0.0.0  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 侦听端口。为 127.0.0.1 那么只能本机访问")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("StaticPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 8jaojfbykixr "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个是 InjectJs 模块使用。用于访问注入的 js")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SSL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("CAKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("CACert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ProxyPass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//www.douban.com/  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要代理的地址")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Plugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 需要使用的插件，目前只能为一个")]),t._v("\n")])])]),a("h2",{attrs:{id:"maxidleconns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maxidleconns"}},[t._v("#")]),t._v(" MaxIdleConns")]),t._v(" "),a("p",[t._v("所有host的连接池最大连接数量")]),t._v(" "),a("h2",{attrs:{id:"maxidleconnsperhost"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maxidleconnsperhost"}},[t._v("#")]),t._v(" MaxIdleConnsPerHost")]),t._v(" "),a("p",[t._v("控制单个Host的连接池大小")]),t._v(" "),a("h2",{attrs:{id:"maxconnsperhost"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maxconnsperhost"}},[t._v("#")]),t._v(" MaxConnsPerHost")]),t._v(" "),a("p",[t._v("控制单个Host的最大连接总数")]),t._v(" "),a("h2",{attrs:{id:"idleconntimeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#idleconntimeout"}},[t._v("#")]),t._v(" IdleConnTimeout")]),t._v(" "),a("h2",{attrs:{id:"tlshandshaketimeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tlshandshaketimeout"}},[t._v("#")]),t._v(" TLSHandshakeTimeout")]),t._v(" "),a("h2",{attrs:{id:"expectcontinuetimeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expectcontinuetimeout"}},[t._v("#")]),t._v(" ExpectContinueTimeout")]),t._v(" "),a("h2",{attrs:{id:"maxcontentlength"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maxcontentlength"}},[t._v("#")]),t._v(" maxcontentlength")]),t._v(" "),a("p",[t._v("默认值是 "),a("code",[t._v("-1")]),t._v(" 此参数对应插件能处理的最大响应体大小。比如设置 "),a("code",[t._v("20971520")]),t._v(" (20971520/1024/1024=20M) 那么")]),t._v(" "),a("p",[a("code",[t._v("Content-Length")]),t._v(" 的值大于"),a("code",[t._v("maxcontentlength")]),t._v(" 插件中的 Replace 模块中关于 body 的处理的部分会被忽略")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("会忽略的部分")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /login.php\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" word\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Request")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" GET\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" POST\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Header")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("X-Forwarded-For")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("X-Real-IP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Response")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ReplaceStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 会被忽略")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Old")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Hello World\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Hello goblin\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("-1")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 会被忽略")]),t._v("\n")])])]),a("p",[t._v('File: ""  作为整个响应体替换不处理此内容因此不会被忽略')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('- url: /login.php\n  Match: word\n  Replace:\n  - Request:\n      Method:\n      - GET\n    Response:\n      Body:\n        File: ""  # 不会被忽略\n')])])])]),t._v(" "),a("h2",{attrs:{id:"proxyserveraddr、proxycheckurl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxyserveraddr、proxycheckurl"}},[t._v("#")]),t._v(" ProxyServerAddr、ProxyCheckURL")]),t._v(" "),a("p",[a("code",[t._v("ProxyServerAddr")]),t._v(" ：代理服务器地址可以使用，"),a("code",[t._v("http")]),t._v("，"),a("code",[t._v("https")]),t._v("，"),a("code",[t._v("socks5")]),t._v(" 例如"),a("code",[t._v("socks5://127.0.0.1:1080")])]),t._v(" "),a("p",[a("code",[t._v("ProxyCheckURL")]),t._v("：验证代理服务器是否有效时访问的 URL")]),t._v(" "),a("h2",{attrs:{id:"plugindir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugindir"}},[t._v("#")]),t._v(" PluginDir")]),t._v(" "),a("p",[t._v("存放插件的目录")]),t._v(" "),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://xujiahua.github.io/posts/20200723-golang-http-reuse/",target:"_blank",rel:"noopener noreferrer"}},[t._v("实验说明 Golang HTTP 连接池参数"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);
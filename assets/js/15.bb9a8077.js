(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{381:function(t,s,a){"use strict";a.r(s);var e=a(45),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"site-相关参数介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#site-相关参数介绍"}},[t._v("#")]),t._v(" Site 相关参数介绍")]),t._v(" "),a("p",[t._v("作为 Proxy 部分的一块单独拉出来讲，确实很有必要。因为这种写法( server:port 然后指定 Listen 地址)看起来不如 nginx 先 Listen:port 再写 server 方便。但是钓鱼是针对站点的。所以从这个角度来说第一种写法会更好")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Site")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("127.0.0.1:8083")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求头的 host 类似于 nginx server_name 如果不匹配 访问不了")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0.0.0.0  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 侦听端口。为 127.0.0.1 那么只能本机访问")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("StaticPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 8jaojfbykixr "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个是 InjectJs 模块使用。用于访问注入的 js")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SSL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("CAKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("CACert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ProxyPass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//www.douban.com/  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要代理的地址")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Plugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 需要使用的插件，目前只能为一个")]),t._v("\n")])])]),a("h2",{attrs:{id:"_127-0-0-1-8083"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_127-0-0-1-8083"}},[t._v("#")]),t._v(" 127.0.0.1:8083")]),t._v(" "),a("p",[t._v("假冒站点的 "),a("code",[t._v("IP+Port")]),t._v(" 或者域名+端口")]),t._v(" "),a("p",[t._v("我们在访问进入之时我们会检查host 判断host是否在 site 列表里面，检查的格式和"),a("code",[t._v("127.0.0.1:8083")]),t._v(" 相同")]),t._v(" "),a("h2",{attrs:{id:"listen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#listen"}},[t._v("#")]),t._v(" Listen")]),t._v(" "),a("p",[t._v("设置侦听地址 如果为 0.0.0.0 意味请求可以从所有的接口访问")]),t._v(" "),a("h2",{attrs:{id:"staticprefix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#staticprefix"}},[t._v("#")]),t._v(" StaticPrefix")]),t._v(" "),a("p",[t._v("这个是一个遗留的设计，目的是为 "),a("code",[t._v("InjectJS")]),t._v(" 模块提供一个供访问本地 js 的 URL")]),t._v(" "),a("h2",{attrs:{id:"ssl-、cakey、cacert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssl-、cakey、cacert"}},[t._v("#")]),t._v(" SSL 、CAKey、CACert")]),t._v(" "),a("p",[t._v("SSL 配置开启前检查证书目录")]),t._v(" "),a("h2",{attrs:{id:"proxypass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxypass"}},[t._v("#")]),t._v(" ProxyPass")]),t._v(" "),a("p",[t._v("需要仿冒的真实地址")]),t._v(" "),a("h2",{attrs:{id:"plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[t._v("#")]),t._v(" Plugin")]),t._v(" "),a("p",[t._v("需要使用的插件。目前为一个站点.一个插件")])])}),[],!1,null,null,null);s.default=r.exports}}]);